name: Build MikoIDE Alpha

on:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering

permissions:
  contents: write
  packages: write

jobs:
  build-alpha-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2
      
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.25'
      
      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
          cache: false
      
      - name: Setup NSIS
        run: |
          choco install nsis -y
          echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Append
        shell: pwsh
      
      - name: Install dependencies
        run: bun install
      
      - name: Build frontend
        run: bun run build
      
      - name: Convert HTML to binary
        run: bun run buildtobin
      
      - name: Build main application
        run: bun run build:cmake
      
      - name: Create portable package
        run: bun run tools/prod.ts --portable
        shell: pwsh
      
      - name: Create installer package (no compression)
        run: makensis shared/windows/installer.nsi
        shell: pwsh
      
      - name: Create webhelper package
        run: |
          if (Test-Path "build\Release\bin\cef\windows64") {
            Compress-Archive -Path "build\Release\bin\cef\windows64\*" -DestinationPath "out\mikowebhelper-win64.zip" -Force
            Write-Host "Created mikowebhelper-win64.zip"
          } else {
            Write-Host "CEF windows64 directory not found, skipping webhelper package"
          }
        shell: pwsh

      - name: Generate build info
        id: build_info
        run: |
          $date = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"
          $commit = git rev-parse --short HEAD
          echo "date=$date" >> $env:GITHUB_OUTPUT
          echo "commit=$commit" >> $env:GITHUB_OUTPUT
        shell: pwsh

      # üî• ‡πÉ‡∏ä‡πâ action ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÅ‡∏ó‡∏ô Invoke-RestMethod
      - name: Create or Update Alpha Release
        uses: softprops/action-gh-release@v1
        with:
          name: "MikoIDE Alpha ${{ steps.build_info.outputs.date }}"
          tag_name: alpha
          prerelease: true
          draft: false
          body: |
            ## Hyperion Alpha Build

            **Last Updated:** ${{ steps.build_info.outputs.date }}  
            **Commit:** [${{ steps.build_info.outputs.commit }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})

            This is an automated alpha build of Hyperion IDE that gets updated daily.

            ### What's included:
            - üöÄ **Installer**: Full installation package with file associations
            - üì¶ **Portable**: Standalone executable package  
            - üåê **WebHelper**: CEF components for web functionality

            ‚ö†Ô∏è **Alpha Warning**: This is a development build and may contain bugs or incomplete features.
          files: |
            out/Hyperion-Setup.exe
            out/hyperion_win-portable.zip
            out/mikowebhelper-win64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts for backup
        uses: actions/upload-artifact@v4
        with:
          name: hyperion-alpha-backup
          path: |
            out/Hyperion-Setup.exe
            out/mikoide_win-portable.zip
            out/mikowebhelper-win64.zip
          retention-days: 7
